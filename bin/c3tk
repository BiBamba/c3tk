#!/usr/bin/env bash

install_cmds() {
  for _cmd in "${@}"
  do
    [[ -x ${INSTALL_PATH}/${_cmd} ]] ||
      ln -fs ${INSTALL_PATH}/c3tk ${INSTALL_PATH}/${_cmd}
  done
}

install() {
  mkdir -p "${INSTALL_PATH}" "${CONFIG_PATH}"
  cp $0 "${INSTALL_PATH}/c3tk"
  if (( $# == 0 ))
  then
    # TODO: Allow for install cmds list and/or groups to be specified
    _cmds=($(grep '^  (' $0 | tr -d '(' | tr -d ')'))
    install_cmds ${_cmds[@]}
  fi
  echo -e "Be sure to add ${INSTALL_PATH} to your path:\n\texport PATH=\"${INSTALL_PATH}:\$PATH\""
  exit 0
}

docker_run() {
  exec docker run --rm --platform="linux/amd64" -w '/w' -v ${PWD}:/w "${@}"
}

# Allow this script to be symlinked as the actual command name :)
cmd="$1"
if [[ ${0//*\/} == "c3tk" ]] 
then 
  shift
else 
  cmd="${0//*\/}"
fi

CONFIG_PATH="${CONFIG_PATH:-$HOME/.config/c3tk}"
INSTALL_PREFIX="${INSTALL_PATH:-/usr/local/bin}"
INSTALL_PATH="${INSTALL_PREFIX}/c3tk/bin"

[[ ${DEBUG} == "" ]] || set -xv

# TODO: Use ~/.config/c3tk to select an upstream image, such as :version/:rc
c3tk_image="starkandwayne/c3tk:latest" # CONFIG_PATH/c3tk/{image,tag}
terraform_image="hashicorp/terraform:latest" # CONFIG_PATH/terraform/{image,tag}
vault_image="hashicorp/vault:latest" # CONFIG_PATH/vault/{image,tag}
aws_image="amazon/aws-cli:latest" # CONFIG_PATH/aws-cli/{image,tag}
gcloud_image="gcr.io/google.com/cloudsdktool/cloud-sdk:latest" # CONFIG_PATH/gcloud/{image,tag}
azure_image="mcr.microsoft.com/azure-cli" # CONFIG_PATH/azure/{image,tag}

touch ~/.saferc ~/.vaultrc ~/.flyrc

[[ install != "${cmd}" ]] || install

case "${cmd}" in 
  (shell)
    docker_run -it \
      -v ~/:/root \
      "${c3tk_image}" bash "${@}"
    ;;
  (aws)
    docker_run -it \
      -v ~/.aws:/root/.aws \
      "${aws_image}" aws "${@}"
    ;;
  (az)
    docker_run -it \
      -v ~/.azure:/root/.azure \
      "${azure_image}" az "${@}"
    ;;
  (bosh)
    docker_run -it \
      -v ~/.bosh:/root/.bosh \
      "${c3tk_image}" bosh "${@}"
    ;;
  (cf)
    docker_run -it \
      -v :/root/.cf \
      "${c3tk_image}" cf "${@}"
    ;;
  (cc-me)
    docker_run -i \
      --log-driver=none -a stdin -a stdout -a stderr \
      "${c3tk_image}" cc-me "${@}"
    ;;
  (sipcalc)
    docker_run -i \
      --log-driver=none -a stdin -a stdout -a stderr \
      "${c3tk_image}" sipcalc "${@}"
    ;;
  (whois)
    docker_run -i \
      --log-driver=none -a stdin -a stdout -a stderr \
      "${c3tk_image}" whois "${@}"
    ;;
  (netcat)
    docker_run -i \
      --log-driver=none -a stdin -a stdout -a stderr \
      "${c3tk_image}" netcat "${@}"
    ;;
  (terraform)
    docker_run -i \
      --log-driver=none -a stdin -a stdout -a stderr \
      "${terraform_image}" terraform "${@}"
    ;;
  (terragrunt)
    docker_run -i \
      --log-driver=none -a stdin -a stdout -a stderr \
      "alpine/terragrunt:latest" terragrunt "${@}"
    ;;
  (tcpdump)
    docker_run -i \
      --log-driver=none -a stdin -a stdout -a stderr \
      "${c3tk_image}" tcpdump "${@}"
    ;;
  (tig)
    docker_run -it \
      "${c3tk_image}" tig "${@}"
    ;;
  (nmap)
    docker_run -i \
      --log-driver=none -a stdin -a stdout -a stderr \
      "${c3tk_image}" nmap "${@}"
    ;;
  (credhub)
    docker_run -it \
      -v ~/.credhub:/root/.credhub \
      "${c3tk_image}" credhub "${@}"
    ;;
  (gpg)
    docker_run -i \
      --log-driver=none -a stdin -a stdout -a stderr \
      "${c3tk_image}" gpg "${@}"
    ;;
  (govc)
    docker_run -i \
      --log-driver=none -a stdin -a stdout -a stderr \
      "vmware/govc:latest" /govc "${@}"
    ;;
  (genesis)
    docker_run -it \
      -v ~/.ssh:/root/.ssh \
      -v ~/.saferc:/root/.saferc \
      -v ~/.vaultrc:/root/vaultrc \
      -v ~/.credhub:/root/.credhub \
      -v ~/.bosh:/root/.bosh \
      -v ~/.cf:/root/.cf \
      "${c3tk_image}" genesis "${@}"
    ;;
  (gcloud)
    docker_run \
      -it \
      -v ~/.gcp:/root/.gcp \
      "${gcloud_image}" gcloud "${@}"
    ;;
  (gsutil)
    docker_run -it \
      -v ~/.gcp:/root/.gcp \
      "${gcloud_image}" gsutil "${@}"
    ;;
  (jq)
    docker_run -i \
      --log-driver=none -a stdin -a stdout -a stderr \
      "${c3tk_image}" /bin/jq "${@}"
    ;;
  (yq)
    docker_run -i \
      --log-driver=none -a stdin -a stdout -a stderr \
      "${c3tk_image}" /bin/yq "${@}"
    ;;
  (xq)
    docker_run -i \
      --log-driver=none -a stdin -a stdout -a stderr \
      "${c3tk_image}" xq "${@}"
    ;;
  (fly)
    docker_run -it \
      -v ~/.flyrc:/root/.flyrc \
      "${c3tk_image}" fly "${@}"
    ;;
  (k9s)
    docker_run -it \
      -v ~/.kube:/root/.kube \
      -v ~/.config:/root/config \
      "${c3tk_image}" k9s "${@}"
    ;;
  (kubectl)
    docker_run -it \
      -v ~/.kube:/root/.kube \
      "${c3tk_image}" kubectl "${@}"
    ;;
  (spruce)
    docker_run -i \
      --log-driver=none -a stdin -a stdout -a stderr \
      "${c3tk_image}" spruce "${@}"
    ;;
  (safe)
    docker_run -it \
      -v ~/.saferc:/root/.saferc \
      -v ~/.vaultrc:/root/.vaultrc \
      "${c3tk_image}" safe "${@}"
    ;;
  (vault)
    docker_run -it \
      -v ~/.vaultrc:/root/.vaultrc \
      "${vault_image}" vault "${@}"
    ;;
esac

exit 0
